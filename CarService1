#!/bin/bash

# Set project details
GROUP_ID="com.example"
ARTIFACT_ID="rest-easy-migration"
VERSION="1.0.0"
PACKAGE_NAME="com.example.cars"

# Create a Maven project
echo "Creating Maven project..."
mvn archetype:generate -DgroupId=$GROUP_ID -DartifactId=$ARTIFACT_ID -Dversion=$VERSION -DarchetypeArtifactId=maven-archetype-quickstart -DinteractiveMode=false

cd $ARTIFACT_ID

# Remove Jersey dependencies from pom.xml
echo "Modifying pom.xml to remove Jersey and add RESTEasy dependencies..."
sed -i '/jersey-server/d' pom.xml
sed -i '/jersey-core/d' pom.xml
sed -i '/jackson-jaxrs-json-provider/d' pom.xml

# Add JAX-RS, RESTEasy, and Jackson dependencies
cat <<EOL >> pom.xml
<dependencies>
    <!-- JAX-RS API -->
    <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>2.1</version>
        <scope>provided</scope>
    </dependency>

    <!-- RESTEasy JAX-RS -->
    <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxrs</artifactId>
        <version>3.15.1.Final</version>
        <scope>provided</scope>
    </dependency>

    <!-- RESTEasy Jackson integration for JSON -->
    <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jackson2-provider</artifactId>
        <version>3.15.1.Final</version>
    </dependency>

    <!-- Test dependency for JUnit -->
    <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
    </dependency>
</dependencies>
EOL

# Create the Java package directory structure
echo "Creating Java package structure and sample code..."
mkdir -p src/main/java/$(echo $PACKAGE_NAME | sed 's/\./\//g')

# Create CarObj.java class
cat <<EOL > src/main/java/$(echo $PACKAGE_NAME | sed 's/\./\//g')/CarObj.java
package $PACKAGE_NAME;

import com.fasterxml.jackson.annotation.JsonProperty;

public class CarObj {
    @JsonProperty("make")
    private String make;

    @JsonProperty("model")
    private String model;

    // Getters and Setters
    public String getMake() {
        return make;
    }

    public void setMake(String make) {
        this.make = make;
    }

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }
}
EOL

# Create CarService.java REST service
cat <<EOL > src/main/java/$(echo $PACKAGE_NAME | sed 's/\./\//g')/CarService.java
package $PACKAGE_NAME;

import javax.ws.rs.Consumes;
import javax.ws.rs.HeaderParam;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

@Path("/my_path")
public class CarService {

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public Response submitCars(@HeaderParam("X_TOKEN_TOKEN") String inputAuthToken, CarObj carObj) {
        // Business logic here
        return Response.status(200).entity("Car submitted successfully").build();
    }
}
EOL

# Clean and build the Maven project
echo "Building the Maven project..."
mvn clean package

echo "Migration complete! The Maven project has been set up with RESTEasy."
